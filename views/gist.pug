html(lang='en')

    head
        title #{gist.description}
        link(rel='stylesheet' href='/style-blocks.css')
        link(rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/github-gist.min.css' integrity='sha256-tAflq+ymku3Khs+I/WcAneIlafYgDiOQ9stIHH985Wo=' crossorigin='anonymous')
        script(src='https://d3js.org/d3.v5.min.js')
        script(src='https://cdnjs.cloudflare.com/ajax/libs/showdown/1.8.6/showdown.js' integrity='sha256-WZhItMKyEJQarLzuYWKmNplzBgqEKvlAedjRsChG3JA=' crossorigin='anonymous')
        script(src='https://cdnjs.cloudflare.com/ajax/libs/js-yaml/3.11.0/js-yaml.js' integrity='sha256-tXpwsPxJo9kMzr6AxcfMzlbqY6YahrPZO9GVquGU0YA=' crossorigin='anonymous')
        script(src='https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/highlight.min.js' integrity='sha256-/BfiIkHlHoVihZdc6TFuj7MmJ0TWcWsMXkeDFwhi0zw=' crossorigin='anonymous')
        script(src='https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/languages/yaml.min.js' integrity='sha256-tvm0lHsuUZcOfj/0C9xJTU4OQx5KpUgxUcAXLX5kvwA=' crossorigin='anonymous')
        script(src='/js/alloy.js')
        script(src='/js/alloy-lang.js')
        script(src='/js/render-gist.js')

    body

        header

            div.column
                div.navigation
                    a(href='/') About
                    |
                    | /
                    |
                    a(href='/style') Styling
                    |
                    | /
                    |
                    a(href='https://github.com/atdyer/alloy-js.git') Github
                a(href='/' + user.login)
                    img(class='avatar' src=user.avatar width='30' height='30')
                    .
                        #{user.name}
                | 's Alloy Instance
                |
                a.gist.gist-id.self(href='https://gist.github.com/' + user.login + '/' + gist.id) #{gist.id}
                div.date
                    | Loading...

        div.column

            //- Header with gist description
            h1 #{gist.description}

            //- If there's an instance XML file, include the svg for visualization
            if instance
                div.gist-instance(style=(dot_alloy['border'] === 'yes' ? 'border: 1px solid #eee' : null))
                    svg.alloy-instance(style=(dot_alloy['height'] ? 'height: ' + dot_alloy['height'] + 'px' : null))

            //- If there's a README file, include it next
            if gist.files['README.md']
                div.gist-readme(data-key='README.md')

            //- If there's an alloy instance, include it.
            if instance && !(dot_alloy['show-model'] === 'no')
                div.instance-source(data-key=(dot_alloy['instance'] || 'instance.xml'))
                    h2 #{instance}
                        a.anchor(name=instance href='#' + instance) #
                    pre
                        code ...

            //- If there's a YAML styling file, include it. The default one will not be shown
            if gist.files['instance.yaml'] && dot_alloy['show-style'] !== 'no'
                div.gist-source(data-key='instance.yaml')
                    h2 instance.yaml
                        a.anchor(name='instance.yaml' href='#instance.yaml') #
                    pre
                        code ...

            //- Always include a license
            div.gist-license
                h2 LICENSE
                    a.anchor(name='license' href='#license') #
                if license !== 'none'
                    | Released under the
                    |
                    a(href=license.url, target='_blank') #{license.name}
                    |
                    | license.
                else
                    | This instance appears to have
                    |
                    a(href='https://choosealicense.com/no-permission/', target='_blank') no license
                    | . Please contact
                    |
                    a(href='https://github.com/' + user.login, target='_blank') the author
                    |
                    | to request a license.

        //- The script will update the updated date and render the gist (including code highlighting)
        script.

            showdown.setFlavor('github');

            let gist = !{JSON.stringify(gist)};

            let formatDate = d3.timeFormat('%B %-d, %Y'),
                parseDate = d3.isoParse;

            gist.updated_at = parseDate(gist.updated_at);

            d3.select('.date')
                .text('Updated ' + formatDate(gist.updated_at));

            render(gist, !{JSON.stringify(instance)});

